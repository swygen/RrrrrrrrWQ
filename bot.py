import os import random import datetime import threading from dotenv import load_dotenv from flask import Flask from telegram import ( Update, InlineKeyboardButton, InlineKeyboardMarkup, ChatMember ) from telegram.ext import ( ApplicationBuilder, CommandHandler, CallbackQueryHandler, MessageHandler, ContextTypes, filters, ChatMemberHandler )

Load token from .env file

load_dotenv() BOT_TOKEN = os.getenv("BOT_TOKEN")

Initialize user data

user_captcha_answers = {} user_language = {}

Define multilingual content with flags

menu_content = {
    "English": {
        "flag": "ЁЯЗ║ЁЯЗ╕",
        "buttons": {
            "contact": "ЁЯУЮ Contact Admin",
            "rules": "ЁЯУЛ View Rules",
            "language": "ЁЯМР Change Language",
            "back": "ЁЯФЩ Back",
            "add_to_group": "тЮХ Add to Group",
            "send_message": "тЬЙя╕П Send Message"
        },
        "rules_text": """ЁЯУЛ <b>Group Help Bot</b> was developed in PHP and has been online since April 13, 2016, with ongoing updates!

<b>Bot Version:</b> 10.9

<b>Bot Admins:</b> 
тАв Developer: Swygen Official  
тАв The Doctor: Server Manager  
тАв Manuel: Developer  
тАв M4R10: Support Director

тЪая╕П Bot staff cannot assist with group issues using this bot.

<b>Thanks</b> to all donors who support server and development costs, and to those who reported bugs or suggested features.

<b>We appreciate all groups who rely on our bot!</b>""",
        "group_welcome": """тЬЕ <b>Welcome {name}</b>, feel free to contact - @Swygen_bd"""
    },
    "Bangla": {
        "flag": "ЁЯЗзЁЯЗй",
        "buttons": {
            "contact": "ЁЯУЮ ржЕрзНржпрж╛ржбржорж┐ржирзЗрж░ рж╕рж╛ржерзЗ ржпрзЛржЧрж╛ржпрзЛржЧ",
            "rules": "ЁЯУЛ рж░рзБрж▓рж╕ ржжрзЗржЦрзБржи",
            "language": "ЁЯМР ржнрж╛рж╖рж╛ ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рзБржи",
            "back": "ЁЯФЩ ржлрж┐рж░рзЗ ржпрж╛ржи",
            "add_to_group": "тЮХ ржЧрзНрж░рзБржкрзЗ ржпрзБржХрзНржд ржХрж░рзБржи",
            "send_message": "тЬЙя╕П ржорзЗрж╕рзЗржЬ ржкрж╛ржарж╛ржи"
        },
        "rules_text": """ЁЯУЛ <b>Group Help Bot</b> PHP-ржП рждрзИрж░рж┐ ржПржмржВ рззрзй ржПржкрзНрж░рж┐рж▓ рзирзжрззрзм ржерзЗржХрзЗ ржЪрж╛рж▓рзБ ржЖржЫрзЗ ржирж┐рзЯржорж┐ржд ржЖржкржбрзЗржЯрж╕рж╣ред

<b>ржмржЯ рж╕ржВрж╕рзНржХрж░ржг:</b> 10.9

<b>ржмржЯ ржЕрзНржпрж╛ржбржорж┐ржи:</b>  
тАв ржбрзЗржнрзЗрж▓ржкрж╛рж░: Swygen Official  
тАв The Doctor: рж╕рж╛рж░рзНржнрж╛рж░ ржорзНржпрж╛ржирзЗржЬрж╛рж░  
тАв Manuel: ржбрзЗржнрзЗрж▓ржкрж╛рж░  
тАв M4R10: рж╕рж╣рж╛рзЯрждрж╛ ржкрж░рж┐ржЪрж╛рж▓ржХ

тЪая╕П ржмржЯ ржХрж░рзНржорзАрж░рж╛ ржПржЗ ржмржЯрзЗрж░ ржорж╛ржзрзНржпржорзЗ ржЧрзНрж░рзБржк рж╕ржорж╕рзНржпрж╛рзЯ рж╕рж╣рж╛рзЯрждрж╛ ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗ ржирж╛ред

<b>ржзржирзНржпржмрж╛ржж</b> рж╕ржмрж╛ржЗржХрзЗ ржпрж╛рж░рж╛ рж╕рж╛рж░рзНржнрж╛рж░ ржУ ржбрзЗржнрзЗрж▓ржкржорзЗржирзНржЯрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рзЗржЫрзЗржи ржПржмржВ ржмрж╛ржЧ рж░рж┐ржкрзЛрж░рзНржЯ ржХрж░рзЗржЫрзЗржи ржмрж╛ ржкрж░рж╛ржорж░рзНрж╢ ржжрж┐рзЯрзЗржЫрзЗржиред

<b>ржпрзЗрж╕ржм ржЧрзНрж░рзБржк ржЖржорж╛ржжрзЗрж░ ржмржЯ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ, рждрж╛ржжрзЗрж░ ржХрзГрждржЬрзНржЮрждрж╛!</b>""",
        "group_welcome": """тЬЕ <b>Welcome {name}</b>, ржкрзНрж░рзЯрзЛржЬржирзЗ ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░рзБржи - @Swygen_bd"""
    },
    "Hindi": {
        "flag": "ЁЯЗоЁЯЗ│",
        "buttons": {
            "contact": "ЁЯУЮ рдПрдбрдорд┐рди рд╕реЗ рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВ",
            "rules": "ЁЯУЛ рдирд┐рдпрдо рджреЗрдЦреЗрдВ",
            "language": "ЁЯМР рднрд╛рд╖рд╛ рдмрджрд▓реЗрдВ",
            "back": "ЁЯФЩ рд╡рд╛рдкрд╕ рдЬрд╛рдПрдВ",
            "add_to_group": "тЮХ рдЧреНрд░реБрдк рдореЗрдВ рдЬреЛрдбрд╝реЗрдВ",
            "send_message": "тЬЙя╕П рд╕рдВрджреЗрд╢ рднреЗрдЬреЗрдВ"
        },
        "rules_text": """ЁЯУЛ <b>Group Help Bot</b> PHP рдореЗрдВ рд╡рд┐рдХрд╕рд┐рдд рдХрд┐рдпрд╛ рдЧрдпрд╛ рдФрд░ 13 рдЕрдкреНрд░реИрд▓ 2016 рд╕реЗ рд▓рдЧрд╛рддрд╛рд░ рдСрдирд▓рд╛рдЗрди рд╣реИред

<b>рдмреЙрдЯ рд╕рдВрд╕реНрдХрд░рдг:</b> 10.9

<b>рдмреЙрдЯ рдПрдбрдорд┐рди:</b>  
тАв рдбреЗрд╡рд▓рдкрд░: Swygen Official  
тАв The Doctor: рд╕рд░реНрд╡рд░ рдореИрдиреЗрдЬрд░  
тАв Manuel: рдбреЗрд╡рд▓рдкрд░  
тАв M4R10: рд╕рдорд░реНрдерди рдирд┐рджреЗрд╢рдХ

тЪая╕П рдмреЙрдЯ рдЯреАрдо рдЗрд╕ рдмреЙрдЯ рд╕реЗ рдЧреНрд░реБрдк рд╕рдорд╕реНрдпрд╛рдУрдВ рдореЗрдВ рдорджрдж рдирд╣реАрдВ рдХрд░ рд╕рдХрддреАред

<b>рдзрдиреНрдпрд╡рд╛рдж</b> рд╕рднреА рджрд╛рддрд╛рдУрдВ рдФрд░ рд╕реБрдЭрд╛рд╡ рджреЗрдиреЗ рд╡рд╛рд▓реЛрдВ рдХреЛ!

<b>рд╣рдо рдЙрди рд╕рднреА рдЧреНрд░реБрдкреНрд╕ рдХреА рд╕рд░рд╛рд╣рдирд╛ рдХрд░рддреЗ рд╣реИрдВ рдЬреЛ рд╣рдорд╛рд░реЗ рдмреЙрдЯ рдкрд░ рдирд┐рд░реНрднрд░ рд╣реИрдВ!</b>""",
        "group_welcome": """тЬЕ <b>Welcome {name}</b>, рдЬрд╝рд░реВрд░рдд рдкрд░ рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВ - @Swygen_bd"""
    },
    "China": {
        "flag": "ЁЯЗиЁЯЗ│",
        "buttons": {
            "contact": "ЁЯУЮ шБФч│╗чобчРЖхСШ",
            "rules": "ЁЯУЛ цЯечЬЛшзДхИЩ",
            "language": "ЁЯМР цЫ┤цФ╣шпншиА",
            "back": "ЁЯФЩ ш┐ФхЫЮ",
            "add_to_group": "тЮХ ц╖╗хКахИ░ч╛дч╗Д",
            "send_message": "тЬЙя╕П хПСщАБц╢ИцБп"
        },
        "rules_text": """ЁЯУЛ <b>Group Help Bot</b> цШпчФи PHP х╝АхПСчЪДя╝МшЗк 2016 х╣┤ 4 цЬИ 13 цЧеф╗ецЭеф╕АчЫ┤хЬич║┐я╝МцМБч╗нцЫ┤цЦ░ф╕нуАВ

<b>цЬ║хЩиф║║чЙИцЬм:</b> 10.9

<b>цЬ║хЩиф║║чобчРЖхСШ:</b>  
тАв х╝АхПСшАЕ: Swygen Official  
тАв The Doctor: цЬНхКбхЩичобчРЖхСШ  
тАв Manuel: х╝АхПСф║║хСШ  
тАв M4R10: цФпцМБф╕╗чоб

тЪая╕П цЬмцЬ║хЩиф║║хЫвщШЯцЧац│ХщАЪш┐ЗцЬ║хЩиф║║хдДчРЖч╛дч╗ДщЧощвШуАВ

<b>цДЯш░вцЙАцЬЙцФпцМБх╝АхПСхТМцЬНхКбхЩичЪДф║║ф╗мя╝Б</b>""",
        "group_welcome": """тЬЕ <b>Welcome {name}</b>я╝МхжВцЬЙщЬАшжБшп╖шБФч│╗ - @Swygen_bd"""
    },
    "Arabic": {
        "flag": "ЁЯЗ╕ЁЯЗж",
        "buttons": {
            "contact": "ЁЯУЮ ╪з╪к╪╡┘Д ╪и╪з┘Д┘Е╪│╪д┘И┘Д",
            "rules": "ЁЯУЛ ╪╣╪▒╪╢ ╪з┘Д┘В┘И╪з╪╣╪п",
            "language": "ЁЯМР ╪к╪║┘К┘К╪▒ ╪з┘Д┘Д╪║╪й",
            "back": "ЁЯФЩ ╪▒╪м┘И╪╣",
            "add_to_group": "тЮХ ╪г╪╢┘Б ╪е┘Д┘Й ╪з┘Д┘Е╪м┘Е┘И╪╣╪й",
            "send_message": "тЬЙя╕П ╪г╪▒╪│┘Д ╪▒╪│╪з┘Д╪й"
        },
        "rules_text": """ЁЯУЛ <b>╪и┘И╪к Group Help</b> ╪к┘Е ╪к╪╖┘И┘К╪▒┘З ╪и┘А PHP ┘И┘З┘И ┘Ж╪┤╪╖ ┘Е┘Ж╪░ 13 ╪г╪и╪▒┘К┘Д 2016 ┘Е╪╣ ╪к╪н╪п┘К╪л╪з╪к ┘Е╪│╪к┘Е╪▒╪й.

<b>╪е╪╡╪п╪з╪▒ ╪з┘Д╪и┘И╪к:</b> 10.9

<b>╪з┘Д┘Е╪│╪д┘И┘Д┘И┘Ж:</b>  
тАв ╪з┘Д┘Е╪╖┘И╪▒: Swygen Official  
тАв The Doctor: ┘Е╪п┘К╪▒ ╪з┘Д╪о╪з╪п┘Е  
тАв Manuel: ┘Е╪╖┘И╪▒  
тАв M4R10: ┘Е╪п┘К╪▒ ╪з┘Д╪п╪╣┘Е

тЪая╕П ┘Д╪з ┘К┘Е┘Г┘Ж ┘Д┘Б╪▒┘К┘В ╪з┘Д╪и┘И╪к ╪з┘Д┘Е╪│╪з╪╣╪п╪й ┘Б┘К ┘Е╪┤┘Г┘Д╪з╪к ╪з┘Д┘Е╪м┘Е┘И╪╣╪й ┘Е┘Ж ╪о┘Д╪з┘Д ┘З╪░╪з ╪з┘Д╪и┘И╪к.

<b>╪┤┘Г╪▒┘Л╪з ┘Д╪м┘Е┘К╪╣ ╪з┘Д┘Е╪к╪и╪▒╪╣┘К┘Ж ┘И╪з┘Д┘Е╪│╪к╪о╪п┘Е┘К┘Ж!</b>""",
        "group_welcome": """тЬЕ <b>Welcome {name}</b>╪М ╪к┘И╪з╪╡┘Д ┘Е╪╣┘Ж╪з ╪е╪░╪з ┘Д╪▓┘Е ╪з┘Д╪г┘Е╪▒ - @Swygen_bd"""
    }
}

Flask keep-alive setup

app = Flask(name)

@app.route('/') def home(): return "Swygen Help Bot is running!"

def keep_alive(): app.run(host='0.0.0.0', port=8080)

Utility functions

def generate_captcha(): num1 = random.randint(10, 99) num2 = random.randint(10, 99) op = random.choice(['+', '-']) question = f"{num1} {op} {num2}" answer = eval(question) return question, answer

def get_buttons(lang): buttons = menu_content[lang]["buttons"] return [ [InlineKeyboardButton(buttons["contact"], url="https://t.me/Swygen_bd")], [InlineKeyboardButton(buttons["rules"], callback_data="rules")], [InlineKeyboardButton(buttons["language"], callback_data="language")], [InlineKeyboardButton(buttons["add_to_group"], url="https://t.me/Swygen_bot?startgroup=true")] ]

Command Handlers

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE): user = update.effective_user question, answer = generate_captcha() user_captcha_answers[user.id] = answer user_language[user.id] = "Bangla" await update.message.reply_text( f"ЁЯФР <b>ржнрзЗрж░рж┐ржлрж┐ржХрзЗрж╢ржирзЗрж░ ржЬржирзНржп ржкрзНрж░рж╢рзНржи:</b>\n\n{question} = ?", parse_mode="HTML" )

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE): user = update.effective_user if user.id in user_captcha_answers: try: if int(update.message.text.strip()) == user_captcha_answers[user.id]: del user_captcha_answers[user.id] await send_welcome(update, context, new=True) else: await update.message.reply_text("тЭМ ржнрзБрж▓ ржЙрждрзНрждрж░! ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред") except ValueError: await update.message.reply_text("тЪая╕П рж╢рзБржзрзБ рж╕ржВржЦрзНржпрж╛ ржжрж┐ржиред") else: await update.message.reply_text("тЮд ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ /start ржжрж┐рзЯрзЗ рж╢рзБрж░рзБ ржХрж░рзБржиред")

async def send_welcome(update: Update, context: ContextTypes.DEFAULT_TYPE, new=False): user = update.effective_user lang = user_language.get(user.id, "Bangla") now = datetime.datetime.now(datetime.timezone.utc).astimezone(datetime.timezone(datetime.timedelta(hours=6))) weekday = now.strftime('%A') date = now.strftime('%Y-%m-%d') time = now.strftime('%I:%M:%S %p') text = f"""тЬЕ <b>Welcome <a href='tg://user?id={user.id}'>{user.first_name}</a></b>\n\n<b>Name:</b> {user.full_name}\n<b>ID:</b> <code>{user.id}</code>\n<b>Username:</b> @{user.username or 'None'}\n<b>Date & Time:</b> {weekday}, {date} тАУ {time}\n<b>Bot Name:</b> Swygen Help Bot\n\n{menu_content[lang]['rules_text']}""" markup = InlineKeyboardMarkup(get_buttons(lang)) if new: await update.message.reply_html(text, reply_markup=markup) else: await update.callback_query.message.edit_text(text, parse_mode="HTML", reply_markup=markup)

async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE): query = update.callback_query await query.answer() user = query.from_user lang = user_language.get(user.id, "Bangla")

if query.data == "rules":
    await query.message.edit_text(menu_content[lang]['rules_text'], parse_mode="HTML")
elif query.data == "language":
    langs = list(menu_content.keys())
    lang_buttons = [[InlineKeyboardButton(f"{menu_content[l]['flag']} {l}", callback_data=f"lang_{l}")] for l in langs]
    # ржПржХржЯрж┐ ржбрж┐ржлрж▓рзНржЯ ржнрж╛рж╖рж╛ ржмрзНржпржмрж╣рж╛рж░ ржХрж░ржм ржпрзЗржЯрж╛ ржмрзНржпрж╛ржХ ржмрж╛ржЯржирзЗрж░ ржЬржирзНржп ржмрзНржпржмрж╣рж╛рж░ рж╣ржмрзЗ
default_lang = "English"

# ржнрж╛рж╖рж╛ ржУ ржкрждрж╛ржХрж╛ рж╕рж╣ ржмрж╛ржЯржи рждрзИрж░рж┐
lang_buttons = [
    [InlineKeyboardButton(f"{menu_content[lang]['flag']} {lang}", callback_data=f"lang_{lang}")]
    for lang in menu_content
]

# ржкрзЗржЫржирзЗ ржпрж╛ржУрзЯрж╛рж░ ржмрж╛ржЯржи ржпрзБржХрзНржд ржХрж░рж╛
lang_buttons.append([
    InlineKeyboardButton(menu_content[default_lang]['buttons']['back'], callback_data="back")
])

# ржЗржЙржЬрж╛рж░ржХрзЗ ржнрж╛рж╖рж╛ ржмрзЗржЫрзЗ ржирзЗржУрзЯрж╛рж░ ржЬржирзНржп ржорзЗрж╕рзЗржЬ ржкрж╛ржарж╛ржирзЛ
await query.message.edit_text(
    text="ЁЯМР <b>Select your language:</b>",
    parse_mode="HTML",
    reply_markup=InlineKeyboardMarkup(lang_buttons)
)
elif query.data.startswith("lang_"):
    selected_lang = query.data.split("_")[1]
    user_language[user.id] = selected_lang
    await send_welcome(update, context, new=False)
elif query.data == "back":
    await send_welcome(update, context, new=False)

async def welcome_new_member(update: Update, context: ContextTypes.DEFAULT_TYPE): member = update.chat_member if member.new_chat_member.status == ChatMember.MEMBER: user = member.new_chat_member.user lang = user_language.get(user.id, "Bangla") now = datetime.datetime.now(datetime.timezone.utc).astimezone(datetime.timezone(datetime.timedelta(hours=6))) time_str = now.strftime("%d/%m/%Y %H:%M:%S") message = menu_content[lang]['group_welcome'].format( name=user.first_name, username=f"@{user.username or 'None'}", join_time=time_str ) keyboard = InlineKeyboardButton(menu_content[lang]['buttons']['send_message'], url="https://t.me/Swygen_bd") await context.bot.send_message(chat_id=update.chat_member.chat.id, text=message, parse_mode="HTML", reply_markup=InlineKeyboardMarkup([[keyboard]]))

Start bot

if name == "main": threading.Thread(target=keep_alive).start() app = ApplicationBuilder().token(BOT_TOKEN).build() app.add_handler(CommandHandler("start", start)) app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message)) app.add_handler(CallbackQueryHandler(button_handler)) app.add_handler(ChatMemberHandler(welcome_new_member, ChatMemberHandler.CHAT_MEMBER)) app.run_polling()

